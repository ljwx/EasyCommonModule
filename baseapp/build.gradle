plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'kotlin-parcelize'//序列化
}

android {
    namespace 'com.ljwx.baseapp'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

//    implementation 'androidx.core:core-ktx:1.7.0'
    //androidx.fragment.app.Fragment
    api 'androidx.appcompat:appcompat:1.3.1'
//    implementation 'com.google.android.material:material:1.5.0'
//    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

//    api 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0'
//    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'

//    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0-alpha03'
//    api 'androidx.fragment:fragment-ktx:1.5.0-alpha03' //compat problem

    //工具类
    api 'com.blankj:utilcodex:1.31.1'

    //rxjava
    def rxjava = '3.0.0'
    api "io.reactivex.rxjava3:rxjava:$rxjava"
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    //RxAndroid，切线程时需要用到
    api "io.reactivex.rxjava3:rxandroid:$rxjava"

    //rxjava自动绑定生命周期
    def autoDispose = "2.1.1"
    api "com.uber.autodispose2:autodispose-android:$autoDispose"
    api "com.uber.autodispose2:autodispose-androidx-lifecycle:$autoDispose"

    //Kotlin 的反射需要集成 org.jetbrains.kotlin:kotlin-reflect 仓库,版本保持与 kotlin 一致。
    //KClass.createInstance
    //implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    def nav_version = "2.5.3"
    // Java language implementation
//    implementation "androidx.navigation:navigation-fragment:$nav_version"
//    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
//    api "androidx.navigation:navigation-fragment-ktx:$nav_version"
//    api "androidx.navigation:navigation-ui-ktx:$nav_version"

    //协程
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    //localbroadcast
    api 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    //viewpager2
//    api 'androidx.viewpager2:viewpager2:1.1.0'
    //material.tabs.TabLayout 和 viewpager2
    api 'com.google.android.material:material:1.9.0'
    //androidx.lifecycle.lifecycleScope
    api 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    //androidx.lifecycle.viewModelScope
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                // Applies the component for the release build variant.from components.release// You can then customize attributes of the publication as shown below.
//                groupId = 'com.ljwx.basemodule'
//                artifactId = 'app'
//                version = '0.3.0'
            }
        }
    }
}